install.packages(*gtrendsR*)
install.packages("gtrendsR")
install.packages("gtrendsR")
library(gtrendsR)
install.packages("gtrendsR")
library(gtrendsR)
TrumpHarrisElection = gtrends(c("Trump","Harris","election"),onlyInterest = TRUE, geo = "US", gprop = "web", time = "today+5-y", category = 0) # last five years
install.packages("gtrendsR")
install.packages("gtrendsR", dependencies = TRUE)
install.packages("gtrendsR", ask = FALSE)
install.packages("gtrendsR", dependencies = TRUE)
install.packages("gtrendsR", ask = FALSE)
install.packages("gtrendsR")
library(gtrendsR)
install.packages("gtrendsR")
library(gtrendsR)
TrumpHarrisElection = gtrends(c("Trump","Harris","election"), onlyInterest = TRUE, geo = "US", gprop = "web", time = "today+5-y", category = 0, ) # last five years
the_df=TrumpHarrisElection$interest_over_time
plot(TrumpHarrisElection)
tg = gtrends("tariff", time = "all")
install.packages("gtrendsR")
library(gtrendsR)
my_trends <- gtrends(c("Trump", "Kamala", "election"),
geo = "US",
gprop = "web",
time = "today+5-y",
onlyInterest = TRUE)
install.packages("gtrendsR")
library(gtrendsR)
TrumpHarrisElection = gtrends(c("Trump","Harris","election"), onlyInterest = TRUE, geo = "US", gprop = "web", time = "today+5-y", category = 0, ) # last five years
load_variables(2023,"acs5",cache=TRUE)
install.packages("tidycensus")
library(tidycensus)
census_api_key("fc2cacf0853a53a209ebf8f1a57f2cd8d1994d3a", install = FALSE)
install.packages("sf")
install.packages("dplyr")
install.packages("ggplot2")
library(ggplot2)
install.packages("readr")
Sys.getenv("CENSUS_API_KEY")
install.packages("sf")
install.packages("dplyr")
load_variables(2023,"acs5",cache=TRUE)
census_api_key("fc2cacf0853a53a209ebf8f1a57f2cd8d1994d3a", install = FALSE)
library(tidycensus)
library(tidycensus)
install.packages("tidycensus")
library(tidycensus)
census_api_key("fc2cacf0853a53a209ebf8f1a57f2cd8d1994d3a", install = FALSE)
census_api_key("fc2cacf0853a53a209ebf8f1a57f2cd8d1994d3a", install = TRUE)
install.packages("sf")
install.packages("dplyr")
install.packages("ggplot2")
library(tidycensus)
library(tidycensus
)
library(tidycensus  )
census_api_key(fc2cacf0853a53a209ebf8f1a57f2cd8d1994d3a)
census_api_key(fc2cacf0853a53a209ebf8f1a57f2cd8d1994d3a, install=FALSE)
census_api_key(fc2cacf0853a53a209ebf8f1a57f2cd8d1994d3a, install=FALSE)
census_api_key("fc2cacf0853a53a209ebf8f1a57f2cd8d1994d3a", install=FALSE)
quarto render
render
d <- aggregate(cbind(Sepal.Width, Petal.Length) ~ Species, iris, mean)
d_long <- reshape(d, varying = list(names(d)[2:3]), v.names = "Value",
timevar = "Variable", times = names(d)[2:3], direction = "long")
ggplot(d_long, aes(x = Value, y = Species, fill = Variable)) +
geom_col(position = position_dodge(0.7), width = 0.6) +
geom_text(aes(label = round(Value, 2)), position = position_dodge(0.7),
hjust = -0.2, size = 3.5, family = "mono", fontface = "bold", color = "black") +
scale_fill_manual(values = c(Sepal.Width = "#a6cee3", Petal.Length = "#1f77b4")) +
labs(title = "Chart #3: Horizontal Grouped Bar Chart", x = "Average Value", y = NULL) +
theme_minimal(base_family = "sans") +
theme(axis.text.y = element_text(face = "bold", size = 11),
axis.title.x = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "top",
plot.margin = margin(10, 30, 10, 10),
panel.grid.major.y = element_blank())
library(ggplot2)
library(ggplot2)
data("iris")
d <- aggregate(cbind(Sepal.Width, Petal.Length) ~ Species, iris, mean)
d_long <- reshape(d, varying = list(names(d)[2:3]), v.names = "Value",
timevar = "Variable", times = names(d)[2:3], direction = "long")
ggplot(d_long, aes(x = Value, y = Species, fill = Variable)) +
geom_col(position = position_dodge(0.7), width = 0.6) +
geom_text(aes(label = round(Value, 2)), position = position_dodge(0.7),
hjust = -0.2, size = 3.5, family = "mono", fontface = "bold", color = "black") +
scale_fill_manual(values = c(Sepal.Width = "#a6cee3", Petal.Length = "#1f77b4")) +
labs(title = "Chart #3: Horizontal Grouped Bar Chart", x = "Average Value", y = NULL) +
theme_minimal(base_family = "sans") +
theme(axis.text.y = element_text(face = "bold", size = 11),
axis.title.x = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "top",
plot.margin = margin(10, 30, 10, 10),
panel.grid.major.y = element_blank())
library(ggplot2)
data("iris")
iris_summary <- aggregate(cbind(Sepal.Width, Petal.Length) ~ Species, data = iris, FUN = mean)
library(ggplot2); data("iris")
d <- aggregate(cbind(Sepal.Width, Petal.Length) ~ Species, iris, mean)
d <- reshape(d, list(2:3), v.names = "Value", timevar = "Variable",
times = names(d)[2:3], direction = "long")
d$Layer <- d$Variable
ggplot(d, aes(x = Species, y = Value, fill = Layer)) +
geom_col(position = position_nudge(x = ifelse(d$Layer == "Sepal.Width", -0.15, 0.15)),
width = 0.5, alpha = ifelse(d$Layer == "Sepal.Width", 0.6, 1)) +
geom_text(aes(label = round(Value, 2)),
position = position_nudge(x = ifelse(d$Layer == "Sepal.Width", -0.15, 0.15)),
vjust = -0.5, size = 3.5, family = "mono", fontface = "bold", color = "black") +
scale_fill_manual(values = c(Sepal.Width = "#1f77b4", Petal.Length = "#a6cee3")) +
labs(title = "Chart #4: Layered Column Chart â€” Sepal vs Petal", x = NULL, y = "Average Value", fill = "Feature") +
theme_minimal(base_family = "sans") +
theme(axis.text.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top",
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10))
